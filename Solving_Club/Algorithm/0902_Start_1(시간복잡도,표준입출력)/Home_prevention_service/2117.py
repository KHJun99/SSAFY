# [모의 S/W 역량 테스트] 홈 방범 서비스
"""
1. 문제 정의
- 도시 크기: N x N 격자 (1 ≤ N ≤ 20)
- 각 칸에는 집(1) 또는 빈 칸(0) 존재
- 방범 서비스는 마름모 모양으로 커버됨
- 서비스 영역의 크기 K일 때, 운영 비용은:  cost = K^2 + (K - 1)^ 2
- 각 집에서 내는 수익 = M
- 목표: 도시 내 어느 지점에 방범 서비스를 설치했을 때, 손해를 보지 않으면서 커버할 수 있는 최대 집의 수를 구하기.

2. 문제 조건

- 손해 조건:
    (집개수 * M) < cost
    → 이 경우 서비스 불가

- 손해가 나지 않는 조건:
    (집개수 * M) ≥ cost

3. 제약사항
- 시간 제한 : 최대 50개 테스트 케이스를 모두 통과하는데 C/C++/Java 모두 3초
- 도시의 크기 N은 5이상 20이하의 정수 (5 <= N <= 20)
- 하나의 집이 지불할 수 있는 비용 M은 1 이상 10 이하의 정수 (1 <= M <= 10)
- 홈방범 서비스의 운영 비용은 서비스 영역의 면적과 동일
- 도시에는 최소 1개 이상의 집이 존재

4. 접근 방법
- 주어진 도시에서 집(1)을 찾는다.
- 집을 기준으로
"""
import sys
sys.stdin = open('sample_input.txt')

T = int(input())
for tc in range(1, T + 1):
    N, M = map(int, input().split())
    city = [list(map(int, input().split()))for _ in range(N)]       # 1 : 집, 0 : 나머지

